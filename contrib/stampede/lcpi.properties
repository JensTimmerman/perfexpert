# LCPI config generated using sniffer
version = 1.0
overall = PAPI_TOT_CYC / PAPI_TOT_INS
ratio.floating_point = FP_COMP_OPS_EXE:SSE_PACKED_SINGLE + FP_COMP_OPS_EXE:SSE_FP_PACKED_DOUBLE + FP_COMP_OPS_EXE:SSE_FP_SCALAR_SINGLE:SSE_SCALAR_DOUBLE / PAPI_TOT_INS
ratio.data_accesses = PAPI_LD_INS / PAPI_TOT_INS
percent.GFLOPS_(%_max).overall = ((SIMD_FP_256:PACKED_SINGLE*8 + (SIMD_FP_256:PACKED_DOUBLE + FP_COMP_OPS_EXE:SSE_PACKED_SINGLE)*4 + FP_COMP_OPS_EXE:SSE_FP_PACKED_DOUBLE*2 + FP_COMP_OPS_EXE:SSE_FP_SCALAR_SINGLE:SSE_SCALAR_DOUBLE) / PAPI_TOT_CYC) / 8
percent.GFLOPS_(%_max).packed = ((SIMD_FP_256:PACKED_SINGLE*8 + (SIMD_FP_256:PACKED_DOUBLE + FP_COMP_OPS_EXE:SSE_PACKED_SINGLE)*4 + FP_COMP_OPS_EXE:SSE_FP_PACKED_DOUBLE*2) / PAPI_TOT_CYC) / 8
percent.GFLOPS_(%_max).scalar = (FP_COMP_OPS_EXE:SSE_FP_SCALAR_SINGLE:SSE_SCALAR_DOUBLE / PAPI_TOT_CYC) / 8
data_accesses.overall = (PAPI_LD_INS * L1_dlat + PAPI_L2_DCA * L2_lat + (PAPI_L3_TCA - PAPI_L3_TCM) * L3_lat + PAPI_L3_TCM * mem_lat) / PAPI_TOT_INS
data_accesses.L1d_hits = (PAPI_LD_INS * L1_dlat) / PAPI_TOT_INS
data_accesses.L2d_hits = (PAPI_L2_DCA * L2_lat) / PAPI_TOT_INS
data_accesses.L3d_hits = ((PAPI_L3_TCA - PAPI_L3_TCM) * L3_lat) / PAPI_TOT_INS
data_accesses.LLC_misses = (PAPI_L3_TCM * mem_lat) / PAPI_TOT_INS
instruction_accesses.overall = (ICACHE * L1_ilat + PAPI_L2_ICA * L2_lat + PAPI_L2_ICM * mem_lat) / PAPI_TOT_INS
instruction_accesses.L1i_hits = (ICACHE * L1_ilat) / PAPI_TOT_INS
instruction_accesses.L2i_hits = PAPI_L2_ICA * L2_lat / PAPI_TOT_INS
instruction_accesses.L2i_misses = PAPI_L2_ICM * mem_lat / PAPI_TOT_INS
data_TLB.overall = DTLB_LOAD_MISSES:WALK_DURATION / PAPI_TOT_INS
instruction_TLB.overall = ITLB_MISSES:WALK_DURATION / PAPI_TOT_INS
branch_instructions.overall = (PAPI_BR_INS * BR_lat + PAPI_BR_MSP * BR_miss_lat) / PAPI_TOT_INS
branch_instructions.correctly_predicted = PAPI_BR_INS * BR_lat / PAPI_TOT_INS
branch_instructions.mispredicted = PAPI_BR_MSP * BR_miss_lat / PAPI_TOT_INS
floating-point_instr.overall = (((FP_COMP_OPS_EXE:SSE_FP_PACKED_DOUBLE + FP_COMP_OPS_EXE:SSE_PACKED_SINGLE + FP_COMP_OPS_EXE:SSE_FP_SCALAR_SINGLE:SSE_SCALAR_DOUBLE) * FP_lat) + (PAPI_FDV_INS * FP_slow_lat)) / PAPI_TOT_INS
floating-point_instr.slow_FP_instr = (PAPI_FDV_INS * FP_slow_lat) / PAPI_TOT_INS
floating-point_instr.fast_FP_instr = ((FP_COMP_OPS_EXE:SSE_FP_PACKED_DOUBLE + FP_COMP_OPS_EXE:SSE_PACKED_SINGLE + FP_COMP_OPS_EXE:SSE_FP_SCALAR_SINGLE:SSE_SCALAR_DOUBLE) * FP_lat) / PAPI_TOT_INS
